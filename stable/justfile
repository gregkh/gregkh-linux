#!/usr/bin/env -S just --justfile

# show the list of options
_help:
	@just --list


# Figure out how many patches not applied from each queue
list:
	#!/usr/bin/env bash
	cd stable-queue
	LS_FILES=$(git ls-files -o)
	NUMBERS=$(echo "${LS_FILES}" | cut -f 1 -d '/' | cut -f 2 -d '-' | sort --version-sort | uniq)
	total=0
	echo "patches not committed:"
	for N in ${NUMBERS}; do
		uncommit=$(echo "${LS_FILES}" | grep ${N} | wc -l)
		printf "	%3s:	%4d\n" "${N}" "${uncommit}"
		total=$((uncommit + total))
	done
	printf "	total:	%4d\n" "${total}"


# commit patches in a stable queue for specific, or all, kernel trees
commit version='all':
	#!/usr/bin/env bash
	cd stable-queue
	V="{{version}}"
	#echo "V=${V}"
	if [[ "${V}" != "all" ]]; then
		../do_it_all "${V}"
		exit
	fi
	NUMBERS=$(git ls-files -o | cut -f 1 -d '/' | cut -f 2 -d '-' | sort --version-sort | uniq)
	for N in ${NUMBERS}; do
		echo "../do_it_all ${N}"
		../do_it_all "${N}"
	done

# create -rc release for current directory
mbox:
	cd {{invocation_directory()}}; ../stable-queue/scripts/quilt-mail mbox

test:
	#!/usr/bin/env bash
	declare -A versions=(	["4.14"]="414"	\
				["4.19"]="419"	\
				["5.4"]="504"	\
				["5.10"]="510"	\
				["5.15"]="515"	\
				["6.1"]="601"	\
				["6.6"]="606"	\
				["6.7"]="607"	\
				)
	for i in ${!versions[@]}; do
		echo "linux-${i}.y" "s-${versions[$i]}"
	done

# sync all scratch directories up
scratch_sync:
	#!/usr/bin/env bash
	cd scratch
	# keep these two arrays in sync!
	root=("linux-4.14.y"
	      "linux-4.19.y"
	      "linux-5.4.y"
	      "linux-5.10.y"
	      "linux-5.15.y"
	      "linux-6.1.y"
	      "linux-6.6.y"
	      "linux-6.7.y"
	      "master")
	scratch=("s-414"
		 "s-419"
		 "s-504"
		 "s-510"
		 "s-515"
		 "s-601"
		 "s-606"
		 "s-607"
		 "s-main")
	num_root=${#root[@]}

	for i in $(seq 0 "${num_root}"); do
		r=${root[${i}]}
		s=${scratch[${i}]}
		if [[ "${r}" == "" ]]; then
			break;
		fi
		echo "Checking out ${s}..."
		git checkout --quiet "${s}"
		echo "Rebasing ${s} onto ${r}"
		git rebase "${r}"
	done

