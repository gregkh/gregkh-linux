#!/usr/bin/env -S just --justfile

# show the list of options
_help:
	@just --list


# Figure out how many patches not applied from each queue
list:
	#!/usr/bin/env bash
	cd stable-queue
	LS_FILES=$(git ls-files -o)
	NUMBERS=$(echo "${LS_FILES}" | cut -f 1 -d '/' | cut -f 2 -d '-' | sort --version-sort | uniq)
	total=0
	echo "patches not committed:"
	for N in ${NUMBERS}; do
		uncommit=$(echo "${LS_FILES}" | grep "${N}/" | wc -l)
		printf "	%3s:	%4d\n" "${N}" "${uncommit}"
		total=$((uncommit + total))
	done
	printf "	total:	%4d\n" "${total}"

# Print a pretty summary of the current queues
summary:
	#!/usr/bin/env bash
	cd stable-queue
	LS_FILES=$(git ls-files -o)
	total=0
	total_nc=0
	printf "      version  queued	not-committed\n"
	for version in $(cat active_kernel_versions | sort --version-sort); do
		if [[ -d queue-${version} ]]; then
			queued=$(ls queue-${version} | grep -v "^series$" | wc -l)
			notcommitted=$(echo "${LS_FILES}" | grep "queue-${version}/" | wc -l)

			printf "	%3s:	%4d	%4d\n" "${version}" "${queued}" "${notcommitted}"
			total=$((queued + total))
			total_nc=$((notcommitted + total_nc))
		fi
	done
	printf "	total:	%4d	%4d\n" "${total}" "${total_nc}"


# Collect the "Tested-by:" lines from a -rc series
tested-by mbox='mbox':
	@./tested-by {{mbox}}

# commit patches in a stable queue for specific, or all, kernel trees
commit version='all':
	#!/usr/bin/env bash
	cd stable-queue
	V="{{version}}"
	#echo "V=${V}"
	if [[ "${V}" != "all" ]]; then
		../do_it_all "${V}"
		exit
	fi
	NUMBERS=$(git ls-files -o | cut -f 1 -d '/' | cut -f 2 -d '-' | sort --version-sort | uniq)
	for N in ${NUMBERS}; do
		echo "../do_it_all ${N}"
		../do_it_all "${N}"
	done

# create -rc release for current directory
mbox:
	cd {{invocation_directory()}}; ../stable-queue/scripts/quilt-mail mbox


# sync all scratch directories up
scratch_sync:
	#!/usr/bin/env bash

	function do_it
	{
		local r=$1
		local s=$2
		echo "Checking out ${s}..."
		git checkout --quiet "${s}"
		echo "Rebasing ${s} onto ${r}"
		git rebase "${r}"
	}

	cd scratch
	declare -A versions=(			\
				["5.4"]="504"	\
				["5.10"]="510"	\
				["5.15"]="515"	\
				["6.1"]="601"	\
				["6.6"]="606"	\
				["6.12"]="612"	\
				["6.16"]="616"	\
				)
	for i in ${!versions[@]}; do
		do_it "linux-${i}.y" "s-${versions[$i]}"
	done
	do_it "master" "s-main"

# Generate the stable -rc releases for all stable branches
generate_rcs:
	./generate_rcs
