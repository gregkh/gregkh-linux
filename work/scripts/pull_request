#!/bin/bash
#
# Copyright (c) 2012,2023 Greg Kroah-Hartman <gregkh@linuxfoundation.org>
#
# Make a pull request for Linux based on the current branch and
# the "next" -rc release
#
# Uses `gum` to make things pretty, and a bit simpler for input
#
# usage
# ${script} [VERSION_NUMBER]
#	[VERSION_NUMBER] is optional, will be guessed if not present
#

pwd=$(pwd)
tree=$(basename ${pwd})

#echo "tree=${tree}"

branch=$(git symbolic-ref --short -q HEAD | cut -f2- -d '-' | cut -f2- -d '-')

#echo "branch=${branch}"

version=$1

if [ "${version}" == "" ] ; then
	version=$(kv)
	# strip off extra ".0" that is in the output of the kernel makefile
	version="${version/.0/}"

	# if this branch is "-linus" then we can "guess" that this is a "normal" pull request of bugfixes for the next -rc release
	if [ "${branch}" == "linus" ] ; then
		# dig out the -rc version, if present
		rc=${version: -1}
		# bump it by 1
		new_rc=$((rc+1))
		#echo "rc=${rc} new_rc=${new_rc}"
		# replace the version with the new bumped-by-one rc
		# it's a good guess, not always right, but most of the time it is.
		version="${version/rc${rc}/rc${new_rc}}"
	else
		# this is possibly for the "next" -rc1 release
		# strip off the -rc chunk
		version="${version/-rc*/}"
		# dig out the minor number
		minor="${version/*./}"
		# and the major number
		major="${version/.*/}"
		#echo "major=${major} minor=${minor}"
		# bump minor by one
		minor=$((minor+1))
		# reconstruct the version and tack on -rc1
		version="${major}.${minor}-rc1"
	fi
fi

#echo "version=${version}"

q=$(gum input --prompt="# What is the kernel version? " --value="${version}")

#echo "q=${q}"

gum style "# Creating pull request for $(gum style --foreground 212 ${tree}) for $(gum style --foreground 99 ${q})"

#printf "# Creating pull request for ${tree} for ${version}\n"
printf "git tag -u kroah.com -s $tree-$q $tree-$branch\n";
printf "git push origin $tree-$q\n";
printf "echo \"git request-pull main git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/$tree.git $tree-$q > msg.txt\" > do.sh\n";
exit

# Old-school perl version is below

#!/usr/bin/perl

use strict;

my $pwd = `pwd`;
chomp($pwd);
#print "pwd = $pwd\n";
my $tree = `basename $pwd`;
chomp($tree);
#print "tree = $tree\n";

my $version;

$version = shift;
if (!defined($version)) {
	$version = `kv`;
	chomp($version);
}

my $branch = `git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/' | cut -f2- -d '-' | cut -f2- -d '-'`;
# doesn't work because the sed regex isn't working due to quoting and I don't feel like figuring it out...
#my $branch = `git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/' | rev | cut -f2- -d '-' | rev `;
chomp($branch);
#print "$branch\n";

print "# What is the kernel version? [$version] ";
my $q = <STDIN>;
chomp($q);
if ($q eq "") {
	$q = $version;
}
print "git tag -u kroah.com -s $tree-$q $tree-$branch\n";
#print "git tag -u kroah.com -s $tree-$q $tree-next\n";
print "git push origin $tree-$q\n";
print "echo \"git request-pull main git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/$tree.git $tree-$q > msg.txt\" > do.sh\n";
