#!/bin/bash

# Text color variables
txtund=$(tput sgr 0 1)    # Underline
txtbld=$(tput bold)       # Bold
txtred=$(tput setaf 1)    # Red
txtgrn=$(tput setaf 2)    # Green
txtylw=$(tput setaf 3)    # Yellow
txtblu=$(tput setaf 4)    # Blue
txtpur=$(tput setaf 5)    # Purple
txtcyn=$(tput setaf 6)    # Cyan
txtwht=$(tput setaf 7)    # White
txtrst=$(tput sgr0)       # Text reset

# Location of all of the patches that have ever been added to the stable trees
# git repo is at git.kernel.org:/pub/scm/linux/kernel/git/stable/stable-queue.git
STABLE_QUEUE="/home/gregkh/linux/stable/stable-queue"

find_fix() {
	FIX=$1

	if [[ ${FIX} =~ [[:xdigit:]]{12} ]] ; then
		id=${BASH_REMATCH[0]}
	else
		echo "${txtred}try 2${txtrst}"
		id=$(echo "${FIX}" | sed -e 's/^[ \t]*//' | cut -f 2 -d ':' | sed -e 's/^[ \t]*//' | cut -f 1 -d ' ')
	fi

	if [ "${id}" == "" ] ; then
		echo "${txtpur}Can not parse fixes line:${txtrst}"
		echo "fixes=\"${FIX}\""
		echo ""
		exit 1
	fi

	long_id=$(cd ~/linux/stable/linux-stable/ && git log -1 --format="%H" "${id}")
	if [ "${long_id}" == "" ] ; then
		echo "${txtred}id: '${id}' is not really a valid git commit id${txtrst}"
		echo ""
		exit 1
	fi

	echo -n "${txtylw}id: '${long_id}'${txtrst} is in: "

	#COMMIT_ID=`cat - | ~/bin/get_commit_id.sh`
	#COMMIT_ID=`cat - | grep -i "fixes:" | head -n 1 | sed -s 's/ //g' | cut -f 2 -d ':'`
	#COMMIT_ID=`cat - | grep -i "fixes:" | head -n 1 | sed -e 's/^[ \t]*//' | cut -f 2 -d ':' | cut -f 1 -d ' '`
	#COMMIT_ID=`cat - | grep -i "fixes:" | head -n 1 | sed -e 's/^[ \t]*//' | cut -f 2 -d ':' | sed -e 's/^[ \t]*//' | cut -f 1 -d ' '`
	#echo "$COMMIT_ID"
	#exit

	#echo "${txtylw}fixes: '${COMMIT_ID}'${txtrst}"


	#git describe --contains ${COMMIT_ID}
	#release=`git describe --contains ${long_id} | cut -f 1 -d '~'`
	#release=$(/home/gregkh/linux/scripts/fix_in_what_release "${long_id}")
	#release=$(/home/gregkh/linux/stable/commit_tree/id_found_in "${long_id}")
	#release+=" | "
	release=$(/home/gregkh/linux/vulns/tools/verhaal/id_found_in "${long_id}")

	# Now look in the stable queue just to be "safe"
	if [ -d ${STABLE_QUEUE} ] ; then
		GREP="git grep"
		cd ${STABLE_QUEUE=} || exit
		rs=$(${GREP} -l -i "${long_id}" queue-*)
		for r in ${rs}; do
			r=${r%\/*}          # only keep the front queue release directory of a match, not the patch itself
			release+=" ${r}"
		done
	fi

	echo "${txtcyn}${release}${txtrst}"
	echo ""
}

echo ""
#fixes=`cat - | grep -i "fixes:" | head -n 1`
#fixes=`cat - | grep -i "fixes:"`
#echo "fixes=${fixes}"
#if [ "${fixes}" == "" ] ; then
#	echo "${txtpur}No \"Fixes:\" line found :(${txtrst}"
#	echo ""
#	exit 1
#fi

lines=$(cat - | grep -i "fixes:" | sed -e 's/^[ \t]*//' | cut -f 2 -d ':' | sed -e 's/^[ \t]*//' | cut -f 1 -d ' ')
#echo "lines=${lines}"
if [ "${lines}" == "" ] ; then
	echo "${txtpur}No \"Fixes:\" line found :(${txtrst}"
	echo ""
	exit 1
fi

for line in ${lines}; do
#	echo "line=${line}"
	find_fix "${line}"
done

