#!/bin/bash
# SPDX-License-Identifier: GPL-2.0
#
# Copyright 2018 Greg Kroah-Hartman <gregkh@linuxfoundation.org>
#
# Dig out patches that are created based on syzbot reports from Linus's tree that might be good to have backported into the stable trees.
#
# horribly messy right now, probably really inefficient and slow, and requires
# lots of manual setup and poking around in a mbox file afterward.  Use at your
# own risk...
#
#

HOME="/home/gregkh/linux"
TMPDIR="/home/gregkh/tmp"
PREFIX="syzbot_search_"
FIXED_IN="/home/gregkh/linux/scripts/fix_in_what_release"


TMP_PREFIX="${TMPDIR}/${PREFIX}"

BASE_KERNEL="6.4"

#KERNEL_RANGE="v4.9..v4.10"
#KERNEL_RANGE="v4.14..v4.15"
#KERNEL_RANGE="v4.17..v4.18"
#KERNEL_RANGE="v4.15..v4.16"
#KERNEL_RANGE="v5.0..v5.1"
#KERNEL_RANGE="v5.1..v5.2"
#KERNEL_RANGE="v5.3..v5.4"
#KERNEL_RANGE="v5.4..HEAD"
KERNEL_RANGE="v6.4..HEAD"

STABLE_KERNEL="${HOME}/stable/linux-${BASE_KERNEL}.y"
#STABLE_KERNEL="${HOME}/stable/linux-4.14.y"
LATEST_KERNEL="${HOME}/gregkh"

cd "${STABLE_KERNEL}"
STABLE_LOG=`mktemp ${TMP_PREFIX}stable_log.XXXXXX` || exit 1
git log v${BASE_KERNEL}..HEAD > "${STABLE_LOG}"

cd -

cd "${LATEST_KERNEL}"
GIT_LOG=`mktemp ${TMP_PREFIX}git_log.XXXXXX` || exit 1
git log --reverse --no-merges --format='%h' "${KERNEL_RANGE}" > ${GIT_LOG}

NOT_STABLE_YET=`mktemp ${TMP_PREFIX}not_stable_yet.XXXXXX` || exit 1

SYZ_MBOX=`mktemp ${TMP_PREFIX}syzkaller_mbox.XXXXXX` || exit 1

COMMIT_LOG=`mktemp ${TMP_PREFIX}tmp_log.XXXXX` || exit 1




while read -r commit
do
	#echo "commit = ${commit}"

	# is it in the log already?
	present=`grep "${commit}" "${STABLE_LOG}"`
	if [ "${present}" == "" ] ; then
		echo "${commit}" >> ${NOT_STABLE_YET}
		#echo "commit ${commit} is not present!"

#		git log -1 --format='%b' ${commit} > ${COMMIT_LOG}

#		# is this commit a "fix" for something already in this release?
#		# fixme...
#		fixes=`grep -i '^[[:space:]]*Fixes:' ${COMMIT_LOG}`
#		if [ "${fixes}" != "" ] ; then
#			fix_commit=`echo ${fixes} | sed -e 's/^[ \t]*//' | cut -f 2 -d ':' | sed -e 's/^[ \t]*//' | cut -f 1 -d ' '`
#			echo "fixes='${fixes}'"
#			echo "	fix_commit='${fix_commit}'"
#			#fix_release=`git describe --contains ${fix_commit} | cut -f 1 -d '~'`
#			fix_release=`/home/gregkh/linux/scripts/fix_in_what_release ${fix_commit}`
#			echo "	fix_release='${fix_release}'"
#		fi


		# is it a syzkaller reported patch?
#		grep -i -E "(syzkaller|syzbot)" ${COMMIT_LOG} &> /dev/null
		git log -1 --format='%b' ${commit} | grep -i -E "(syzkaller|syzbot)" &> /dev/null
		if [ $? -eq 0 ] ; then
			#echo "${commit}" >> "${SYZ_MBOX}"
			git show --pretty=email ${commit} >> "${SYZ_MBOX}"
			echo "commit ${commit} is a syzkaller one!"
		fi
	fi
done < "${GIT_LOG}"

rm ${COMMIT_LOG}
rm ${NOT_STABLE_YET}
rm ${GIT_LOG}
rm ${STABLE_LOG}

echo "# commits are in ${SYZ_MBOX}"
echo "mutt -f ${SYZ_MBOX}"
